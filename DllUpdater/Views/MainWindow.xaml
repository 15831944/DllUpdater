<Controls:MetroWindow x:Class="DllUpdater.Views.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                      xmlns:properties="clr-namespace:DllUpdater.Properties"
                      xmlns:v="clr-namespace:DllUpdater.Views"
                      xmlns:vm="clr-namespace:DllUpdater.ViewModels"
                      Title="DllUpdater"
                      Width="709.758"
                      Height="538.392"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      Icon="/DllUpdater;component/Resources/DllUpdater.ico"
                      ResizeMode="CanResizeWithGrip"
                      SaveWindowPosition="True"
                      TitleCaps="False"
                      WindowTransitionsEnabled="False">

    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger MessageKey="Information" Messenger="{Binding Messenger}">
            <l:InformationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>

        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

        <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </i:EventTrigger>

        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="Closed">
            <l:LivetCallMethodAction MethodName="Shutdown" MethodTarget="{Binding}" />
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->

    </i:Interaction.Triggers>

    <Window.Resources>
        <BitmapImage x:Key="IconEliteAPI" UriSource="/DllUpdater;component/Resources/EliteApi.png" />
    </Window.Resources>

    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem Content="{Binding Dlls.StatusMessage}" />
        </StatusBar>
        <TabControl Padding="2">
            <TabItem Controls:ControlsHelper.HeaderFontSize="15" Header="{x:Static properties:Resources.TabMainHeader}">
                <DockPanel>
                    <Border Margin="0,0,0,2"
                            BorderBrush="Silver"
                            BorderThickness="2"
                            DockPanel.Dock="Top">
                        <DockPanel HorizontalAlignment="Left">
                            <Image Width="20"
                                   Margin="20,0,10,0"
                                   Source="{StaticResource IconEliteAPI}" />
                            <CheckBox Content="EliteApi"
                                      FontWeight="Bold"
                                      IsChecked="{Binding Settings.EliteAPI.Enable}" />
                            <Label Content="{Binding Dlls.VersionEliteAPI}" />
                            <CheckBox Content="EliteMMO.API"
                                      FontWeight="Bold"
                                      IsChecked="{Binding Settings.EliteMMOAPI.Enable}" />
                            <Label Content="{Binding Dlls.VersionEliteMMOAPI}" />
                            <ToggleButton Margin="10,2,2,2"
                                          Padding="5,2,5,2"
                                          Command="{Binding VersionCheckCommand}"
                                          IsChecked="{Binding Dlls.IsRunningVersionCheck, Mode=OneWay}"
                                          ToolTip="{x:Static properties:Resources.ButtonVersionCheckToolTip}">
                                <Rectangle Width="15"
                                           Height="15"
                                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_refresh}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </ToggleButton>
                        </DockPanel>
                    </Border>
                    <StackPanel Margin="0,0,2,0" DockPanel.Dock="Left">
                        <ToggleButton Command="{Binding DownloadDllCommand}"
                                      IsChecked="{Binding Dlls.IsRunningDownload, Mode=OneWay}"
                                      ToolTip="{x:Static properties:Resources.ButtonDownloadToolTip}">
                            <Rectangle Width="20"
                                       Height="20"
                                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_cloud_download}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </ToggleButton>
                        <ToggleButton Command="{Binding SearchDllCommand}"
                                      IsChecked="{Binding Dlls.IsRunningSearch, Mode=OneWay}"
                                      ToolTip="{x:Static properties:Resources.ButtonSearchToolTip}">
                            <Rectangle Width="20"
                                       Height="20"
                                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_page_search}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </ToggleButton>
                        <Button Command="{Binding AllCheckCommand}" ToolTip="{x:Static properties:Resources.ButtonChekAllToolTip}">
                            <Rectangle Width="20"
                                       Height="20"
                                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_checkmark}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <ToggleButton Command="{Binding ReplaceDllCommand}"
                                      IsChecked="{Binding Dlls.IsRunningReplace, Mode=OneWay}"
                                      ToolTip="{x:Static properties:Resources.ButtonReplaceToolTip}">
                            <Rectangle Width="20"
                                       Height="20"
                                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_save}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </ToggleButton>
                    </StackPanel>
                    <!--  置換対象DLLグリッド  -->
                    <DataGrid AutoGenerateColumns="False"
                              BorderBrush="Silver"
                              BorderThickness="2"
                              ItemsSource="{Binding Dlls.DllList}">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Binding="{Binding Enable, UpdateSourceTrigger=PropertyChanged}"
                                                    EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                    ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                    Header="{x:Static properties:Resources.ColReplace}" />
                            <DataGridTextColumn Width="*"
                                                Binding="{Binding Path}"
                                                Header="{x:Static properties:Resources.ColPath}"
                                                IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding Version}"
                                                Header="{x:Static properties:Resources.ColVersion}"
                                                IsReadOnly="True" />
                        </DataGrid.Columns>

                    </DataGrid>

                </DockPanel>
            </TabItem>
            <!--  設定タブ  -->
            <TabItem Controls:ControlsHelper.HeaderFontSize="15" Header="{x:Static properties:Resources.TabSettingsHeader}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <GroupBox Grid.Row="0"
                              Margin="2"
                              Header="{x:Static properties:Resources.GroupGlobalHeader}">
                        <WrapPanel Margin="2" Orientation="Horizontal">
                            <CheckBox Margin="0,0,10,5"
                                      Content="{x:Static properties:Resources.CheckDownloadAtStartup}"
                                      FontWeight="Bold"
                                      IsChecked="{Binding Settings.CheckNewDllOnStartup}" />
                            <CheckBox Margin="0,0,10,5"
                                      Content="{x:Static properties:Resources.CheckSearchAtStartup}"
                                      FontWeight="Bold"
                                      IsChecked="{Binding Settings.FindDllOnStartup}" />
                            <StackPanel Margin="0,0,10,5" Orientation="Horizontal">
                                <CheckBox Margin="0,0,5,0"
                                          Content="Proxy"
                                          FontWeight="Bold"
                                          IsChecked="{Binding Settings.Proxy.Enable}" />
                                <TextBox Width="100" Text="{Binding Settings.Proxy.Server}" />
                                <TextBox Width="50" Text="{Binding Settings.Proxy.Port}" />
                            </StackPanel>
                        </WrapPanel>
                    </GroupBox>
                    <GroupBox Grid.Row="1"
                              Margin="2"
                              Header="{x:Static properties:Resources.GroupTargetHeader}">
                        <DataGrid Grid.Row="2"
                                  AutoGenerateColumns="False"
                                  HeadersVisibility="Column"
                                  ItemsSource="{Binding Settings.TargetPathList, Mode=TwoWay}"
                                  SelectedItem="{Binding TargetPath, Mode=TwoWay}">
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Binding="{Binding Enable, UpdateSourceTrigger=PropertyChanged}"
                                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                        Header="{x:Static properties:Resources.ColEnable}" />
                                <DataGridTextColumn Width="*"
                                                    Binding="{Binding Path, UpdateSourceTrigger=PropertyChanged}"
                                                    Header="{x:Static properties:Resources.ColPath}" />
                                <DataGridTemplateColumn Header="{x:Static properties:Resources.ColEdit}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid HorizontalAlignment="Right">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition Width="auto" />
                                                </Grid.ColumnDefinitions>
                                                <!--  フォルダ選択ボタン  -->
                                                <Button Grid.Column="0"
                                                        Margin="0,0,2,0"
                                                        Padding="5"
                                                        Command="{Binding DataContext.EditTargetPathCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        CommandParameter="{Binding}">
                                                    <Rectangle Width="16" Height="14">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Visual="{StaticResource appbar_folder}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                                <!--  行追加ボタン  -->
                                                <Button Grid.Column="1"
                                                        Margin="0,0,2,0"
                                                        Padding="5"
                                                        Command="{Binding DataContext.AddTargetPathCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        CommandParameter="{Binding}">
                                                    <Rectangle Width="16" Height="16">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Visual="{StaticResource appbar_add}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                                <!--  行削除ボタン  -->
                                                <Button Grid.Column="2"
                                                        Margin="0,0,0,0"
                                                        Padding="5"
                                                        Command="{Binding DataContext.DeleteTargetPathCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        CommandParameter="{Binding}">
                                                    <Rectangle Width="16" Height="3">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Visual="{StaticResource appbar_minus}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                    <GroupBox Grid.Row="2"
                              Margin="2"
                              Header="{x:Static properties:Resources.GroupIgnoreHeader}">
                        <DataGrid Grid.Row="2"
                                  AutoGenerateColumns="False"
                                  HeadersVisibility="Column"
                                  ItemsSource="{Binding Settings.IgnorePathList, Mode=TwoWay}"
                                  SelectedItem="{Binding IgnorePath, Mode=TwoWay}">
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Binding="{Binding Enable, UpdateSourceTrigger=PropertyChanged}"
                                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                        Header="{x:Static properties:Resources.ColEnable}" />
                                <DataGridTextColumn Width="*"
                                                    Binding="{Binding Path, UpdateSourceTrigger=PropertyChanged}"
                                                    Header="{x:Static properties:Resources.ColPath}" />
                                <!--  EliteAPI  -->
                                <DataGridCheckBoxColumn Width="auto"
                                                        Binding="{Binding EliteAPI, UpdateSourceTrigger=PropertyChanged}"
                                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                        Header="">
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTipService.ToolTip" Value="EliteAPI" />
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                                <!--  EliteMMOAPI  -->
                                <DataGridCheckBoxColumn Width="auto"
                                                        Binding="{Binding EliteMMOAPI, UpdateSourceTrigger=PropertyChanged}"
                                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                                        Header="">
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTipService.ToolTip" Value="EliteMMO.API" />
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                                <DataGridTemplateColumn Header="{x:Static properties:Resources.ColEdit}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid HorizontalAlignment="Right">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition Width="auto" />
                                                </Grid.ColumnDefinitions>
                                                <!--  フォルダ選択ボタン  -->
                                                <Button Grid.Column="0"
                                                        Margin="0,0,2,0"
                                                        Padding="5"
                                                        Command="{Binding DataContext.EditIgnorePathCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        CommandParameter="{Binding}">
                                                    <Rectangle Width="16" Height="14">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Visual="{StaticResource appbar_folder}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                                <!--  行追加ボタン  -->
                                                <Button Grid.Column="1"
                                                        Margin="0,0,2,0"
                                                        Padding="5"
                                                        Command="{Binding DataContext.AddIgnorePathCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        CommandParameter="{Binding}">
                                                    <Rectangle Width="16" Height="16">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Visual="{StaticResource appbar_add}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                                <!--  行削除ボタン  -->
                                                <Button Grid.Column="2"
                                                        Margin="0,0,0,0"
                                                        Padding="5"
                                                        Command="{Binding DataContext.DeleteIgnorePathCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        CommandParameter="{Binding}">
                                                    <Rectangle Width="16" Height="3">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Visual="{StaticResource appbar_minus}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Controls:ControlsHelper.HeaderFontSize="15" Header="{x:Static properties:Resources.TabAboutHeader}">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <Image Width="32"
                               Height="32"
                               Margin="0,0,5,0"
                               Source="/DllUpdater;component/Resources/DllUpdater.ico" />
                        <TextBlock VerticalAlignment="Center"
                                   FontSize="20"
                                   FontWeight="Bold"
                                   Text="{Binding ApplicationName}" />
                    </StackPanel>
                    <StackPanel Grid.Row="1"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <TextBlock FontSize="15"
                                   FontWeight="Bold"
                                   Text="Ver" />
                        <TextBlock FontSize="15"
                                   FontWeight="Bold"
                                   Text="{Binding ApplicationVersion}" />
                    </StackPanel>
                    <StackPanel Grid.Row="2"
                                Margin="0,0,0,10"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <TextBlock FontSize="15" Text="{Binding ApplicationCopyright}" />
                    </StackPanel>
                    <StackPanel Grid.Row="3"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <Button Margin="0,10,0,0"
                                Command="{Binding GitHubCommand}"
                                ToolTip="GitHubからソースを取得">
                            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                                <Rectangle Width="16"
                                           Height="16"
                                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_social_github_octocat_solid}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Margin="2,0,0,0"
                                           FontSize="15"
                                           FontWeight="Bold"
                                           Text="{Binding UrlGitHub}" />
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </DockPanel>
</Controls:MetroWindow>
